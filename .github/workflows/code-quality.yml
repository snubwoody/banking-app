name: Code quality
env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite:data.db
concurrency:
  group: ${{github.ref}}-${{github.workflow}}
  cancel-in-progress: true
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: |
          cd src-tauri
          cargo fmt --check 
  lint: 
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        name: Cache sqlx cli   
        id: cache-cargo-bin
        with:
          path: |
            ~/.cargo/bin
          key: ${{runner.os}}-cargo-bin
      - uses: actions/cache@v4
        name: Cache rust
        with:
          path: |
            ~/.cargo
            src-tauri/target
          key: rust-${{runner.os}}-${{hashFiles('src-tauri/Cargo.lock')}}-${{hashFiles('src-tauri/Cargo.toml')}}
          restore-keys: |
            rust-${{runner.os}}-${{hashFiles('src-tauri/Cargo.lock')}}-
            rust-${{runner.os}}-
      - run: cargo install sqlx-cli
        if: steps.cache-cargo-bin.outputs.cache-hit != 'true'
        name: Install sqlx cli
      - name: Setup database
        run: |
          cd src-tauri
          sqlx database create
          sqlx migrate run
      - name: Run clippy
        run: |
          cd src-tauri
          cargo clippy --all-features --all-targets -- -D warnings
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
      - run: pnpm install
      - name: Lint frontend
        run: pnpm lint
  all-good:
    needs: ["lint","format","eslint"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo Done