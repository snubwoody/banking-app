name: CI/CD
env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite:data.db
concurrency:
  group: ${{github.ref}}-${{github.workflow}}
  cancel-in-progress: true
on:
  pull_request:
    branches: ["main"]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix: 
        os: [ubuntu-latest,windows-latest,macos-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ./src-tauri/target
            ~/.cargo
          key: ${{runner.os}}-cargo-${{hashFiles('**/Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
      - run: cargo install sqlx-cli
      - run: pnpm install
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - run: pnpm tauri info
      - name: Setup database
        run: |
          cd src-tauri
          sqlx database create
          sqlx migrate run
      - run: pnpm tauri build
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest,windows-latest,macos-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ./src-tauri/target
            ~/.cargo
          key: ${{runner.os}}-cargo-${{hashFiles('**/Cargo.lock')}}
          restore-keys: ${{runner.os}}-cargo-
      - run: cargo install sqlx-cli
      - uses: taiki-e/install-action@cargo-nextest
      - name: Setup database
        run: |
          cd src-tauri
          sqlx database create
          sqlx migrate run
      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - name: Run tests
        run: |
          cd src-tauri
          cargo nextest run
  all-good:
    runs-on: ubuntu-latest
    needs: 
      - test
      - build
    steps:
      - uses: actions/checkout@v4
      - run: echo Done